pluginManagement {
    repositories {
        // Primary repositories for plugin resolution - ORDER MATTERS
        gradlePluginPortal() // Must be first for Gradle plugin portal
        google() // Google Maven repository for Android plugins
        mavenCentral() // Maven Central for other plugins

        // Android-specific repositories
        maven {
            url = uri("https://dl.google.com/dl/android/maven2/")
            allowInsecureProtocol = false
        }

        // Enterprise-grade Maven repositories for stable plugin builds
        maven {
            url = uri("https://plugins.gradle.org/m2/")
            allowInsecureProtocol = false
        }
        maven {
            url = uri("https://repo1.maven.org/maven2/")
            allowInsecureProtocol = false
        }

        // Fast mirrors for improved build performance
        maven {
            url = uri("https://maven.aliyun.com/repository/google")
            allowInsecureProtocol = false
        }
        maven {
            url = uri("https://maven.aliyun.com/repository/public")
            allowInsecureProtocol = false
        }

        // JetBrains Maven repository for Kotlin plugins
        maven {
            url = uri("https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin")
            allowInsecureProtocol = false
        }

        // React Native Gradle plugin resolution - try multiple paths
        // Path from frontend/apps/app/android/ to frontend/node_modules/@react-native/gradle-plugin
        def rnPluginPaths = [
            "../../node_modules/@react-native/gradle-plugin",     // CI path
            "../../../node_modules/@react-native/gradle-plugin", // Local development
            "../../../../node_modules/@react-native/gradle-plugin", // Alternative CI
            "../../../../../node_modules/@react-native/gradle-plugin" // Root workspace
        ]

        def rnPluginFound = false
        for (path in rnPluginPaths) {
            def pluginPath = new File(settingsDir, path)
            if (pluginPath.exists() && pluginPath.isDirectory()) {
                // Convert to URI for Windows compatibility
                url uri(pluginPath.toURI().toURL())
                println "✅ Found React Native Gradle plugin at: ${pluginPath.absolutePath}"
                rnPluginFound = true
                break
            }
        }

        if (!rnPluginFound) {
            println "⚠️  React Native Gradle plugin not found in any expected location. Searched paths:"
            rnPluginPaths.each { path ->
                def pluginPath = new File(settingsDir, path)
                println "   - ${pluginPath.absolutePath} (${pluginPath.exists() ? 'exists' : 'not found'})"
            }
            println "🔄 Will attempt to resolve from Maven repositories instead"
        }
    }

    // Specify stable plugin versions to avoid dependency resolution issues
    plugins {
        id("com.android.application") version "8.2.2"
        id("com.android.library") version "8.2.2"
        id("org.jetbrains.kotlin.android") version "1.9.24"
        id("com.facebook.react.settings") version "0.76.5"
        // Add explicit React plugin resolution for CI environments
        id("com.facebook.react") version "0.76.5"
        // Versions plugin for dependency management
        id("com.github.ben-manes.versions") version "0.50.0"
    }

    // React Native gradle plugin resolution for all environments
    // Enhanced path resolution for CI and local environments
    def rnPluginPaths = [
        // CI environment paths (GitHub Actions, Jenkins, etc.)
        '../../node_modules/@react-native/gradle-plugin',
        // Local development paths
        '../../../node_modules/@react-native/gradle-plugin',
        // Alternative CI paths
        '../../../../node_modules/@react-native/gradle-plugin',
        // Root workspace path
        '../../../../../node_modules/@react-native/gradle-plugin'
    ]

    def rnPluginDir = null
    def foundPath = null

    for (path in rnPluginPaths) {
        def testDir = new File(settingsDir, path)
        if (testDir.exists() && testDir.isDirectory()) {
            rnPluginDir = testDir
            foundPath = path
            break
        }
    }

    if (rnPluginDir != null) {
        def env = System.getenv('CI') || System.getenv('GITHUB_ACTIONS') ? 'CI' : 'local'
        println "✅ Found React Native gradle plugin in ${env} environment: ${rnPluginDir.absolutePath}"
        includeBuild(foundPath)
    } else {
        def env = System.getenv('CI') || System.getenv('GITHUB_ACTIONS') ? 'CI' : 'local'
        println "⚠️  React Native gradle plugin not found in ${env} environment. Searched paths:"
        rnPluginPaths.each { path ->
            def testDir = new File(settingsDir, path)
            println "   - ${testDir.absolutePath} (${testDir.exists() ? 'exists' : 'not found'})"
        }
        println "🔄 Will attempt to use repository resolution for React Native plugin"
    }
}

// React Native settings extension will be configured automatically by the plugin
// Removed manual configuration to avoid extension availability issues

rootProject.name = 'App'
include ':app'
