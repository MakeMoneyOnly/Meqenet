pluginManagement {
    includeBuild("../../../node_modules/@react-native/gradle-plugin")
}
plugins {
    id("com.facebook.react.settings")
}
extensions.configure(com.facebook.react.ReactSettingsExtension){ ex ->
    ex.autolinkLibrariesFromCommand()
}
rootProject.name = 'App'
include ':app'

// Try to find and include React Native gradle plugin with absolute paths
def findReactNativeGradlePlugin() {
    def currentDir = new File('.')
    def possiblePaths = []

    // Add various possible paths
    possiblePaths.add(new File(currentDir, '../../../node_modules/@react-native/gradle-plugin'))
    possiblePaths.add(new File(currentDir, '../node_modules/@react-native/gradle-plugin'))
    possiblePaths.add(new File(currentDir, 'node_modules/@react-native/gradle-plugin'))

    // Try to find plugin directory in common CI locations
    try {
        def workspaceDir = System.getenv('GITHUB_WORKSPACE')
        if (workspaceDir) {
            possiblePaths.add(new File(workspaceDir, 'frontend/node_modules/@react-native/gradle-plugin'))
        }
    } catch (Exception e) {
        println "Could not get GITHUB_WORKSPACE: ${e.message}"
    }

    for (path in possiblePaths) {
        if (path.exists() && path.isDirectory()) {
            println "Found React Native gradle plugin at: ${path.absolutePath}"
            return path.absolutePath
        }
    }

    // Fallback: try to use current working directory as base
    def fallbackPath = new File('../../../../node_modules/@react-native/gradle-plugin')
    if (fallbackPath.exists()) {
        println "Using fallback path: ${fallbackPath.absolutePath}"
        return fallbackPath.absolutePath
    }

    return null
}

def pluginPath = findReactNativeGradlePlugin()
if (pluginPath) {
    includeBuild(pluginPath)
    println "Successfully included React Native gradle plugin from: ${pluginPath}"
} else {
    println "ERROR: React Native gradle plugin not found in any location"
    // Try to continue without the plugin for CI purposes
    try {
        includeBuild("../../../node_modules/@react-native/gradle-plugin")
    } catch (Exception e) {
        println "Failed to include plugin with default path: ${e.message}"
    }
}
