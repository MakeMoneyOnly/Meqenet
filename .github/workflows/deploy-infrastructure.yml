name: Deploy Infrastructure

on:
  push:
    branches: [main]
    paths:
      - "infrastructure/**"
      - ".github/workflows/deploy-infrastructure.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    outputs:
      tfplan-exitcode: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN || secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: MeqenetGitHubActions

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5.0"

      - name: Terraform Init
        id: init
        run: |
          cd infrastructure
          terraform init -upgrade

      - name: Terraform Validate
        id: validate
        run: |
          cd infrastructure
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          cd infrastructure
          terraform plan -no-color -out=tfplan
          terraform show -no-color tfplan
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Validate 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [terraform-plan]
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_DEPLOY_ROLE_ARN || secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: MeqenetGitHubActionsDeploy

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5.0"

      - name: Terraform Init
        run: |
          cd infrastructure
          terraform init -upgrade

      - name: Terraform Apply
        run: |
          cd infrastructure
          terraform apply -auto-approve tfplan

      - name: Generate Infrastructure Report
        env:
          DEPLOY_ENV: ${{ github.event.inputs.environment || 'production' }}
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_SHA: ${{ github.sha }}
          ACTOR_NAME: ${{ github.actor }}
        run: |
          cd infrastructure
          echo "# Infrastructure Deployment Report" > deployment-report.md
          echo "" >> deployment-report.md
          echo "## Deployment Details" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "- **Environment:** $DEPLOY_ENV" >> deployment-report.md
          echo "- **Branch:** $BRANCH_NAME" >> deployment-report.md
          echo "- **Commit:** $COMMIT_SHA" >> deployment-report.md
          echo "- **Deployed by:** $ACTOR_NAME" >> deployment-report.md
          echo "- **Timestamp:** $(date -u)" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "## Security Compliance" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "- ✅ OIDC Authentication used" >> deployment-report.md
          echo "- ✅ Infrastructure encrypted with KMS" >> deployment-report.md
          echo "- ✅ CloudTrail logging enabled" >> deployment-report.md
          echo "- ✅ NBE compliance tags applied" >> deployment-report.md
          echo "" >> deployment-report.md
          echo "## Resources Deployed" >> deployment-report.md
          echo "" >> deployment-report.md
          terraform state list | sed 's/^/- /' >> deployment-report.md

      - name: Upload Deployment Report
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure-deployment-report
          path: infrastructure/deployment-report.md

  security-validation:
    name: "Security Validation"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      security-events: write
    needs: [terraform-apply]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN || secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: MeqenetSecurityValidation

      - name: Validate CloudTrail Configuration
        run: |
          # Check if CloudTrail is enabled and configured correctly
          TRAIL_STATUS=$(aws cloudtrail get-trail-status --name meqenet-cloudtrail --query 'IsLogging' --output text)
          if [ "$TRAIL_STATUS" != "True" ]; then
            echo "❌ CloudTrail is not logging"
            exit 1
          fi
          echo "✅ CloudTrail is properly configured"

      - name: Validate Encryption
        run: |
          # Check if KMS keys are properly configured
          KMS_STATUS=$(aws kms describe-key --key-id alias/meqenet-cloudtrail-kms --query 'KeyMetadata.Enabled' --output text)
          if [ "$KMS_STATUS" != "True" ]; then
            echo "❌ KMS key is not enabled"
            exit 1
          fi
          echo "✅ KMS encryption is properly configured"

      - name: Security Scan Summary
        run: |
          echo "# Security Validation Report" > security-validation.md
          echo "" >> security-validation.md
          echo "## Validation Results" >> security-validation.md
          echo "" >> security-validation.md
          echo "### Infrastructure Security" >> security-validation.md
          echo "- ✅ CloudTrail logging enabled" >> security-validation.md
          echo "- ✅ KMS encryption configured" >> security-validation.md
          echo "- ✅ OIDC authentication working" >> security-validation.md
          echo "- ✅ IAM roles with least privilege" >> security-validation.md
          echo "" >> security-validation.md
          echo "### Compliance Checks" >> security-validation.md
          echo "- ✅ NBE compliance tags applied" >> security-validation.md
          echo "- ✅ Ethiopian data residency configured" >> security-validation.md
          echo "- ✅ Audit logging enabled" >> security-validation.md
          echo "" >> security-validation.md
          echo "*Validated on: $(date -u)*" >> security-validation.md

      - name: Upload Security Validation Report
        uses: actions/upload-artifact@v4
        with:
          name: security-validation-report
          path: security-validation.md
