name: üîí CodeQL Security Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - name: üîß Enable Corepack
        run: corepack enable

      - name: Set pnpm registry
        run: pnpm config set registry https://registry.npmjs.org/

      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: |
            - args: [--no-frozen-lockfile, --ignore-scripts]
              cwd: ./frontend

      - name: Setup React Native CLI
        working-directory: ./frontend
        run: |
          npm install -g @react-native-community/cli || true
          cd apps/app && npx react-native doctor --fix || true
          cd apps/app && npx @react-native-community/cli doctor || true

      - uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript, java, kotlin
          config-file: .github/codeql/codeql-config.yml

      # Setup Java for Android/Kotlin analysis
      - name: üîß Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      # Build Android project for Java/Kotlin analysis
      - name: üèóÔ∏è Build Android Project
        if: contains(matrix.language, 'java') || contains(matrix.language, 'kotlin')
        working-directory: ./frontend/apps/app
        run: |
          # Set up proper Node.js environment variables
          export NODE_ENV=development
          export ANDROID_HOME=$ANDROID_HOME
          export PATH=$PATH:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools

          # Initialize React Native project properly
          npx react-native start --reset-cache || true &
          sleep 15

          # Generate React Native codegen artifacts
          npx @react-native-community/cli codegen || true

          # Clean up background process
          pkill -f "react-native start" || true

          cd android && chmod +x ./gradlew
          ./gradlew assembleDebug --no-daemon --parallel --info

      - uses: github/codeql-action/analyze@v3
