name: ⚖️ Credit Scoring Model Bias Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write

env:
  NODE_VERSION: "22"
  PNPM_VERSION: "10.4.1"

jobs:
  bias-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - name: 📦 Install pnpm (with enhanced retry logic)
        run: |
          echo "📦 Installing pnpm with enhanced retry logic..."

          # Function to install pnpm with better error handling
          install_pnpm() {
            local attempt=$1
            echo "Attempt $attempt/5 - Installing pnpm..."

            # Try primary installation method with better error handling
            if curl -fsSL --connect-timeout 10 --max-time 30 https://get.pnpm.io/install.sh | sh -; then
              # Source the updated .bashrc to get the new PATH
              source ~/.bashrc 2>/dev/null || true
              # Also set the environment variables manually
              export PNPM_HOME="$HOME/.local/share/pnpm"
              export PATH="$PNPM_HOME:$PATH"
              if command -v pnpm &> /dev/null; then
                echo "✅ Primary installation method succeeded"
                return 0
              else
                echo "❌ Primary installation method completed but pnpm not found in PATH"
                return 1
              fi
            else
              echo "❌ Primary installation method failed"
              return 1
            fi
          }

          # Main retry loop
          for i in {1..5}; do
            if install_pnpm $i; then
              # Add pnpm to PATH for the current session
              export PNPM_HOME="$HOME/.local/share/pnpm"
              export PATH="$PNPM_HOME:$PATH"

              # Clear any problematic registry configurations that might interfere with pnpm
              pnpm config delete @jsr:registry 2>/dev/null || true
              pnpm config delete //npm.jsr.io/:_authToken 2>/dev/null || true

              # Verify pnpm installation
              if command -v pnpm &> /dev/null; then
                echo "✅ pnpm installed and verified successfully on attempt $i"
                pnpm --version
                break
              else
                echo "❌ pnpm command not found after installation on attempt $i"
                if [ $i -eq 5 ]; then
                  echo "💥 CRITICAL: pnpm installation failed after all attempts"
                  exit 1
                fi
              fi
            else
              if [ $i -eq 5 ]; then
                echo "💥 CRITICAL: All pnpm installation attempts failed"
                echo "🔍 Checking network connectivity..."
                curl -fsSL --connect-timeout 5 --max-time 10 https://www.google.com > /dev/null && echo "✅ Internet connection OK" || echo "❌ No internet connection"
                echo "🔍 Checking DNS resolution..."
                nslookup get.pnpm.io || echo "❌ DNS resolution failed"
                exit 1
              else
                echo "⏳ Waiting before retry..."
                sleep $((i * 3))  # Exponential backoff: 3s, 6s, 9s, 12s
              fi
            fi
          done

      - name: 🔧 Setup Node.js with pnpm PATH
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
          echo "PNPM_HOME=$PNPM_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: 📚 Install Dependencies
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
          pnpm install --no-frozen-lockfile
      - name: 🔧 Generate Prisma Client
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
          pnpm prisma generate --schema=./backend/services/auth-service/prisma/schema.prisma
      - name: Run Bias Test Suite
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
          if pnpm exec vitest --version >/dev/null 2>&1; then
            pnpm exec vitest --run -t "(Bias|Fairness|DisparateImpact)"
          else
            echo "No model bias test files present; skipping."
          fi
