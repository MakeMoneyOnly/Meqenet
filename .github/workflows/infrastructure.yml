name: 🏗️ Infrastructure Validation & Security

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  terraform-security:
    name: 🔒 Terraform Security Validation
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.1
          run_install: false

      - name: 🔧 Enable Corepack
        run: |
          echo "📦 Installing pnpm with retry logic..."
          for i in {1..3}; do
            if npm install -g pnpm@${{ env.PNPM_VERSION }}; then
              echo "✅ pnpm installed successfully on attempt $i"
              break
            else
              echo "❌ pnpm installation failed on attempt $i"
              if [ $i -eq 3 ]; then
                echo "🔄 Falling back to direct download..."
                curl -fsSL https://get.pnpm.io/install.sh | PNPM_VERSION=${{ env.PNPM_VERSION }} sh -
                break
              fi
              sleep 2
            fi
          done

          # Verify pnpm installation
          pnpm --version

      - name: 📚 Install Dependencies
        run: |
          pnpm config set registry https://registry.npmjs.org/
          pnpm install --no-frozen-lockfile --ignore-scripts

      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt check
        run: |
          if [ -d terraform ]; then
            terraform fmt -check -diff terraform/
          else
            echo "No terraform dir; skipping."
          fi
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: infrastructure
          format: sarif
      - name: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: infrastructure/
          framework: terraform
          output_format: sarif
          output_file_path: checkov-terraform.sarif
          soft_fail: false
      - name: Upload Terraform Security SARIF (if present)
        if: ${{ hashFiles('results.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
