name: License Policy & Secrets Scan

on:
  pull_request:
    branches: [main, develop]

jobs:
  policy-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies with fallback for lockfile mismatches..."
          if pnpm install --frozen-lockfile --ignore-scripts; then
            echo "✅ Dependencies installed successfully with frozen lockfile"
          else
            echo "⚠️  Frozen lockfile failed, attempting fallback..."
            if pnpm install --no-frozen-lockfile --ignore-scripts; then
              echo "✅ Dependencies installed successfully with fresh lockfile"
              echo "::warning title=Frozen Lockfile Mismatch::Lockfile was updated during installation. This may indicate dependency changes that should be committed."
            else
              echo "⚠️  pnpm install failed, falling back to npm..."
              npm ci
            fi
          fi

      - name: Generate license report
        run: |
          pnpm licenses list --json > licenses.json || npm ls --json > licenses.json

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: licenses
          path: licenses.json

      - name: License allowlist check
        run: |
          node -e "const fs=require('fs'); const allow=JSON.parse(fs.readFileSync('.github/license-allowlist.json','utf8')).allowed; const txt=fs.readFileSync('licenses.json','utf8'); const bad = []; for (const lic of ['GPL','LGPL','AGPL','MS-PL']) if (txt.includes(lic) && !allow.includes(lic)) bad.push(lic); if(bad.length){console.error('Forbidden licenses detected:',bad); process.exit(1);} console.log('License policy OK');"

      - name: Secrets scan (Trufflehog)
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --only-verified --no-update
