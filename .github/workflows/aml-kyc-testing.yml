name: üèõÔ∏è AML/KYC & Financial Crime Prevention Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: "22"
  PNPM_VERSION: "10.4.1"

permissions:
  contents: read

jobs:
  aml-kyc:
    name: ü™™ KYC & Identity Verification Testing
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: üì¶ Install pnpm (Simple & Reliable)
        run: |
          echo "üì¶ Installing pnpm via npm (reliable method)..."
          npm install -g pnpm@${{ env.PNPM_VERSION }}
          echo "‚úÖ pnpm installed successfully"
          pnpm --version

      - name: üìö Install Dependencies
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"
          pnpm install --no-frozen-lockfile
      - name: üîß Generate Prisma Client
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"

          # Navigate to the auth-service directory
          cd backend/services/auth-service

          # Ensure Prisma dependencies are installed
          echo "üì¶ Ensuring Prisma dependencies..."
          if ! pnpm list @prisma/client >/dev/null 2>&1; then
            echo "Installing Prisma dependencies..."
            pnpm add @prisma/client prisma --save-dev
          fi

          # Set Prisma binary targets for better compatibility
          echo "üîß Configuring Prisma for reliable engine downloads..."
          export PRISMA_CLI_BINARY_TARGETS="linux-musl-openssl-3.0.x"

          # Generate Prisma client with error handling
          echo "üèóÔ∏è Generating Prisma client..."
          if ! pnpm prisma generate --schema=./prisma/schema.prisma; then
            echo "‚ùå Prisma client generation failed, trying alternative approach..."

            # Try installing Prisma CLI globally and generating
            if pnpm add -g prisma; then
              echo "‚úÖ Prisma CLI installed globally"
              prisma generate --schema=./prisma/schema.prisma
            else
              echo "‚ùå Failed to install Prisma CLI globally"
              exit 1
            fi
          fi

          # Verify Prisma client was generated
          if [ ! -f "node_modules/.prisma/client/index.d.ts" ]; then
            echo "‚ùå Prisma client generation verification failed"
            ls -la node_modules/.prisma/ 2>/dev/null || echo "Prisma client directory not found"
            exit 1
          else
            echo "‚úÖ Prisma client generated successfully"
          fi
      - name: Run AML/KYC tests
        run: |
          export PNPM_HOME="$HOME/.local/share/pnpm"
          export PATH="$PNPM_HOME:$PATH"

          # Navigate to the auth-service directory for testing
          cd backend/services/auth-service

          # Check if vitest is available
          if pnpm exec vitest --version >/dev/null 2>&1; then
            echo "ü™™ Running AML/KYC tests..."

            # Run tests with AML/KYC patterns
            if pnpm exec vitest --run -t "(AML|KYC|AntiMoneyLaundering|IdentityVerification)" --reporter=verbose; then
              echo "‚úÖ AML/KYC tests completed successfully"
            else
              # Check if tests failed due to no matching test files
              if pnpm exec vitest --run -t "(AML|KYC|AntiMoneyLaundering|IdentityVerification)" --reporter=json 2>/dev/null | grep -q '"numTotalTestSuites":0'; then
                echo "‚ÑπÔ∏è No AML/KYC test files found - this is expected if AML/KYC testing hasn't been implemented yet"
                echo "üìù To add AML/KYC tests, create test files with patterns: AML, KYC, AntiMoneyLaundering, IdentityVerification"
              else
                echo "‚ùå AML/KYC tests failed"
                exit 1
              fi
            fi
          else
            echo "‚ö†Ô∏è Vitest not available, skipping AML/KYC tests"
          fi
