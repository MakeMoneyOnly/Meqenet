# Meqenet.et - Observability Stack
# This Docker Compose file sets up a local observability stack.
# It is intended to be used alongside the main docker-compose.yml.
#
# To run:
# 1. Start the main services: docker-compose up -d
# 2. Start this stack: docker-compose -f docker-compose.observability.yml up -d
#
version: "3.8"

services:
  # --------------------------------------------------------------------------
  # OpenSearch: For central logging
  # --------------------------------------------------------------------------
  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: meqenet-opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock: { soft: -1, hard: -1 }
      nofile: { soft: 65536, hard: 65536 }
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - meqenet-dev-network
    restart: unless-stopped

  # --------------------------------------------------------------------------
  # OpenSearch Dashboards: The visualization layer for logs
  # --------------------------------------------------------------------------
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: meqenet-opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '''[{"host": "opensearch", "protocol": "http"}]'''
    depends_on:
      - opensearch
    networks:
      - meqenet-dev-network
    restart: unless-stopped

  # --------------------------------------------------------------------------
  # OpenTelemetry Collector: Receives data and exports to backends
  # --------------------------------------------------------------------------
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.87.0
    container_name: meqenet-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8889:8889" # Prometheus exporter
    depends_on:
      - opensearch
      - jaeger
    networks:
      - meqenet-dev-network
    restart: unless-stopped

  # --------------------------------------------------------------------------
  # Jaeger: For distributed tracing
  # --------------------------------------------------------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: meqenet-jaeger
    ports:
      - "16686:16686" # UI
      - "14250:14250" # Collector
    networks:
      - meqenet-dev-network
    restart: unless-stopped

  # --------------------------------------------------------------------------
  # Prometheus: For metrics collection
  # --------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: meqenet-prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - meqenet-dev-network
    restart: unless-stopped

  # --------------------------------------------------------------------------
  # Grafana: For visualization of metrics and logs
  # --------------------------------------------------------------------------
  grafana:
    image: grafana/grafana:10.1.1
    container_name: meqenet-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      - opensearch
    networks:
      - meqenet-dev-network
    restart: unless-stopped

volumes:
  opensearch-data:
    driver: local

networks:
  meqenet-dev-network:
    external: true
