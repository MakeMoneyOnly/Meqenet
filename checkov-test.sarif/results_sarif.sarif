{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.469", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_AWS_26", "name": "Ensure all data stored in the SNS topic is encrypted", "shortDescription": {"text": "Ensure all data stored in the SNS topic is encrypted"}, "fullDescription": {"text": "Ensure all data stored in the SNS topic is encrypted"}, "help": {"text": "Ensure all data stored in the SNS topic is encrypted\nResource: aws_sns_topic.key_rotation_alerts"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-15"}, {"id": "CKV_AWS_272", "name": "Ensure AWS Lambda function is configured to validate code-signing", "shortDescription": {"text": "Ensure AWS Lambda function is configured to validate code-signing"}, "fullDescription": {"text": "Ensure AWS Lambda function is configured to validate code-signing"}, "help": {"text": "Ensure AWS Lambda function is configured to validate code-signing\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-272"}, {"id": "CKV_AWS_116", "name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)", "shortDescription": {"text": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"}, "fullDescription": {"text": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"}, "help": {"text": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"}, {"id": "CKV_AWS_173", "name": "Check encryption settings for Lambda environmental variable", "shortDescription": {"text": "Check encryption settings for Lambda environmental variable"}, "fullDescription": {"text": "Check encryption settings for Lambda environmental variable"}, "help": {"text": "Check encryption settings for Lambda environmental variable\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-5"}, {"id": "CKV_AWS_115", "name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit", "shortDescription": {"text": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"}, "fullDescription": {"text": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"}, "help": {"text": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"}, {"id": "CKV_AWS_117", "name": "Ensure that AWS Lambda function is configured inside a VPC", "shortDescription": {"text": "Ensure that AWS Lambda function is configured inside a VPC"}, "fullDescription": {"text": "Ensure that AWS Lambda function is configured inside a VPC"}, "help": {"text": "Ensure that AWS Lambda function is configured inside a VPC\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"}, {"id": "CKV_AWS_50", "name": "X-Ray tracing is enabled for Lambda", "shortDescription": {"text": "X-Ray tracing is enabled for Lambda"}, "fullDescription": {"text": "X-Ray tracing is enabled for Lambda"}, "help": {"text": "X-Ray tracing is enabled for Lambda\nResource: aws_lambda_function.key_rotation"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-serverless-policies/bc-aws-serverless-4"}, {"id": "CKV_AWS_158", "name": "Ensure that CloudWatch Log Group is encrypted by KMS", "shortDescription": {"text": "Ensure that CloudWatch Log Group is encrypted by KMS"}, "fullDescription": {"text": "Ensure that CloudWatch Log Group is encrypted by KMS"}, "help": {"text": "Ensure that CloudWatch Log Group is encrypted by KMS\nResource: aws_cloudwatch_log_group.key_rotation_lambda_logs"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-cloudwatch-log-group-is-encrypted-by-kms"}, {"id": "CKV_AWS_338", "name": "Ensure CloudWatch log groups retains logs for at least 1 year", "shortDescription": {"text": "Ensure CloudWatch log groups retains logs for at least 1 year"}, "fullDescription": {"text": "Ensure CloudWatch log groups retains logs for at least 1 year"}, "help": {"text": "Ensure CloudWatch log groups retains logs for at least 1 year\nResource: aws_cloudwatch_log_group.key_rotation_lambda_logs"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-338"}, {"id": "CKV_AWS_109", "name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints", "shortDescription": {"text": "Ensure IAM policies does not allow permissions management / resource exposure without constraints"}, "fullDescription": {"text": "Ensure IAM policies does not allow permissions management / resource exposure without constraints"}, "help": {"text": "Ensure IAM policies does not allow permissions management / resource exposure without constraints\nResource: aws_iam_policy_document.cloudtrail_kms"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint"}, {"id": "CKV_AWS_111", "name": "Ensure IAM policies does not allow write access without constraints", "shortDescription": {"text": "Ensure IAM policies does not allow write access without constraints"}, "fullDescription": {"text": "Ensure IAM policies does not allow write access without constraints"}, "help": {"text": "Ensure IAM policies does not allow write access without constraints\nResource: aws_iam_policy_document.cloudtrail_kms"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-iam-policies-do-not-allow-write-access-without-constraint"}, {"id": "CKV_AWS_356", "name": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions", "shortDescription": {"text": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions"}, "fullDescription": {"text": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions"}, "help": {"text": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions\nResource: aws_iam_policy_document.cloudtrail_kms"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-356"}, {"id": "CKV2_AWS_76", "name": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability", "shortDescription": {"text": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability"}, "fullDescription": {"text": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability"}, "help": {"text": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability\nResource: aws_lb.main"}, "defaultConfiguration": {"level": "error"}}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_AWS_26", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Ensure all data stored in the SNS topic is encrypted"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 6, "endLine": 15, "snippet": {"text": "resource \"aws_sns_topic\" \"key_rotation_alerts\" {\n  name = \"meqenet-key-rotation-alerts\"\n\n  tags = {\n    Name        = \"meqenet-key-rotation-alerts\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-alerts\"\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AWS_272", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure AWS Lambda function is configured to validate code-signing"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_116", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_173", "ruleIndex": 3, "level": "error", "attachments": [], "message": {"text": "Check encryption settings for Lambda environmental variable"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_115", "ruleIndex": 4, "level": "error", "attachments": [], "message": {"text": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_117", "ruleIndex": 5, "level": "error", "attachments": [], "message": {"text": "Ensure that AWS Lambda function is configured inside a VPC"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_50", "ruleIndex": 6, "level": "error", "attachments": [], "message": {"text": "X-Ray tracing is enabled for Lambda"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 116, "endLine": 147, "snippet": {"text": "resource \"aws_lambda_function\" \"key_rotation\" {\n  filename         = data.archive_file.key_rotation_lambda_zip.output_path\n  function_name    = \"meqenet-key-rotation\"\n  role            = aws_iam_role.key_rotation_lambda_role.arn\n  handler         = \"index.handler\"\n  runtime         = \"nodejs18.x\"\n  timeout         = 300\n  memory_size     = 256\n\n  environment {\n    variables = {\n      AWS_REGION                    = var.aws_region\n      KEY_ROTATION_INTERVAL_DAYS    = var.key_rotation_interval_days\n      MAX_ACTIVE_KEYS              = var.max_active_keys\n      KEY_PREFIX                   = var.key_prefix\n      LOG_LEVEL                    = var.log_level\n      ALERT_SNS_TOPIC_ARN         = aws_sns_topic.key_rotation_alerts.arn\n    }\n  }\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n    Purpose     = \"security-key-rotation\"\n  }\n\n  depends_on = [\n    aws_iam_role_policy.key_rotation_lambda_policy,\n    aws_cloudwatch_log_group.key_rotation_lambda_logs\n  ]\n}\n"}}}}]}, {"ruleId": "CKV_AWS_158", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Ensure that CloudWatch Log Group is encrypted by KMS"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 150, "endLine": 159, "snippet": {"text": "resource \"aws_cloudwatch_log_group\" \"key_rotation_lambda_logs\" {\n  name              = \"/aws/lambda/meqenet-key-rotation\"\n  retention_in_days = 30\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda-logs\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AWS_338", "ruleIndex": 8, "level": "error", "attachments": [], "message": {"text": "Ensure CloudWatch log groups retains logs for at least 1 year"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/key-rotation.tf"}, "region": {"startLine": 150, "endLine": 159, "snippet": {"text": "resource \"aws_cloudwatch_log_group\" \"key_rotation_lambda_logs\" {\n  name              = \"/aws/lambda/meqenet-key-rotation\"\n  retention_in_days = 30\n\n  tags = {\n    Name        = \"meqenet-key-rotation-lambda-logs\"\n    Environment = var.environment\n    Service     = \"auth-service\"\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AWS_109", "ruleIndex": 9, "level": "error", "attachments": [], "message": {"text": "Ensure IAM policies does not allow permissions management / resource exposure without constraints"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/main.tf"}, "region": {"startLine": 798, "endLine": 854, "snippet": {"text": "data \"aws_iam_policy_document\" \"cloudtrail_kms\" {\n  statement {\n    sid    = \"Enable IAM User Permissions\"\n    effect = \"Allow\"\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n    }\n    actions   = [\n      \"kms:Create*\",\n      \"kms:Describe*\",\n      \"kms:Enable*\",\n      \"kms:List*\",\n      \"kms:Put*\",\n      \"kms:Update*\",\n      \"kms:Revoke*\",\n      \"kms:Disable*\",\n      \"kms:Get*\",\n      \"kms:Delete*\",\n      \"kms:TagResource\",\n      \"kms:UntagResource\",\n      \"kms:ScheduleKeyDeletion\",\n      \"kms:CancelKeyDeletion\"\n    ]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid    = \"Allow CloudTrail to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"cloudtrail.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n\n  statement {\n    sid    = \"Allow CloudWatch Logs to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"logs.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AWS_111", "ruleIndex": 10, "level": "error", "attachments": [], "message": {"text": "Ensure IAM policies does not allow write access without constraints"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/main.tf"}, "region": {"startLine": 798, "endLine": 854, "snippet": {"text": "data \"aws_iam_policy_document\" \"cloudtrail_kms\" {\n  statement {\n    sid    = \"Enable IAM User Permissions\"\n    effect = \"Allow\"\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n    }\n    actions   = [\n      \"kms:Create*\",\n      \"kms:Describe*\",\n      \"kms:Enable*\",\n      \"kms:List*\",\n      \"kms:Put*\",\n      \"kms:Update*\",\n      \"kms:Revoke*\",\n      \"kms:Disable*\",\n      \"kms:Get*\",\n      \"kms:Delete*\",\n      \"kms:TagResource\",\n      \"kms:UntagResource\",\n      \"kms:ScheduleKeyDeletion\",\n      \"kms:CancelKeyDeletion\"\n    ]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid    = \"Allow CloudTrail to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"cloudtrail.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n\n  statement {\n    sid    = \"Allow CloudWatch Logs to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"logs.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n}\n"}}}}]}, {"ruleId": "CKV_AWS_356", "ruleIndex": 11, "level": "error", "attachments": [], "message": {"text": "Ensure no IAM policies documents allow \"*\" as a statement's resource for restrictable actions"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/main.tf"}, "region": {"startLine": 798, "endLine": 854, "snippet": {"text": "data \"aws_iam_policy_document\" \"cloudtrail_kms\" {\n  statement {\n    sid    = \"Enable IAM User Permissions\"\n    effect = \"Allow\"\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"]\n    }\n    actions   = [\n      \"kms:Create*\",\n      \"kms:Describe*\",\n      \"kms:Enable*\",\n      \"kms:List*\",\n      \"kms:Put*\",\n      \"kms:Update*\",\n      \"kms:Revoke*\",\n      \"kms:Disable*\",\n      \"kms:Get*\",\n      \"kms:Delete*\",\n      \"kms:TagResource\",\n      \"kms:UntagResource\",\n      \"kms:ScheduleKeyDeletion\",\n      \"kms:CancelKeyDeletion\"\n    ]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid    = \"Allow CloudTrail to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"cloudtrail.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n\n  statement {\n    sid    = \"Allow CloudWatch Logs to encrypt logs\"\n    effect = \"Allow\"\n    principals {\n      type        = \"Service\"\n      identifiers = [\"logs.amazonaws.com\"]\n    }\n    actions = [\n      \"kms:GenerateDataKey*\",\n      \"kms:Decrypt\"\n    ]\n    resources = [\"*\"]\n    # Removed condition to avoid circular dependency\n  }\n}\n"}}}}]}, {"ruleId": "CKV2_AWS_76", "ruleIndex": 12, "level": "error", "attachments": [], "message": {"text": "Ensure AWS ALB attached WAFv2 WebACL is configured with AMR for Log4j Vulnerability"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "infrastructure/load_balancer.tf"}, "region": {"startLine": 246, "endLine": 271, "snippet": {"text": "resource \"aws_lb\" \"main\" {\n  name               = \"meqenet-main-alb\"\n  internal           = false\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.alb.id]\n  subnets            = [aws_subnet.public_a.id, aws_subnet.public_b.id]\n\n  enable_deletion_protection = true\n  \n  # Fix CKV_AWS_91 - Enable access logging\n  access_logs {\n    bucket  = aws_s3_bucket.alb_logs.id\n    enabled = true\n    prefix  = \"alb-logs\"\n  }\n  \n  # Fix CKV_AWS_131 - Drop invalid HTTP headers\n  drop_invalid_header_fields = true\n  \n  # Fix CKV_AWS_328 - Defensive desync mitigation mode (already satisfied by default)\n  desync_mitigation_mode = \"defensive\"\n\n  tags = {\n    Name = \"meqenet-main-alb\"\n  }\n}\n"}}}}]}]}]}